// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DiplomaMakerApi.Migrations
{
    [DbContext(typeof(DiplomaMakingContext))]
<<<<<<<< HEAD:Backend/DiplomaMakerApi/Migrations/20240721080254_init.Designer.cs
    [Migration("20240721080254_init")]
    partial class init
========
    [Migration("20240717140354_new")]
    partial class @new
>>>>>>>> b7ae81bddc086c9b27a6c8e2234ff5355ddeb1df:Backend/DiplomaMakerApi/Migrations/20240717140354_new.Designer.cs
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DiplomaMakerApi.Models.Bootcamp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DiplomaTemplateId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("GraduationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("GuidId")
                        .HasColumnType("uuid");

                    b.Property<int>("TrackId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DiplomaTemplateId");

                    b.HasIndex("TrackId");

                    b.ToTable("Bootcamps");
                });

            modelBuilder.Entity("DiplomaMakerApi.Models.DiplomaSnapshot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BasePdf")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("BootcampGraduationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("BootcampGuidId")
                        .HasColumnType("uuid");

                    b.Property<string>("BootcampName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Footer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("FooterStylingId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("GeneratedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Intro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("IntroStylingId")
                        .HasColumnType("integer");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("LinkStylingId")
                        .HasColumnType("integer");

                    b.Property<string>("Main")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("MainStylingId")
                        .HasColumnType("integer");

                    b.Property<Guid?>("StudentGuidId")
                        .HasColumnType("uuid");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("TemplateLastUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TemplateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VerificationCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FooterStylingId");

                    b.HasIndex("IntroStylingId");

                    b.HasIndex("LinkStylingId");

                    b.HasIndex("MainStylingId");

                    b.ToTable("DiplomaSnapshots");
                });

            modelBuilder.Entity("DiplomaMakerApi.Models.DiplomaTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Footer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("FooterStylingId")
                        .HasColumnType("integer");

                    b.Property<string>("Intro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("IntroStylingId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("LinkStylingId")
                        .HasColumnType("integer");

                    b.Property<string>("Main")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("MainStylingId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("PdfBackgroundLastUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("FooterStylingId");

                    b.HasIndex("IntroStylingId");

                    b.HasIndex("LinkStylingId");

                    b.HasIndex("MainStylingId");

                    b.ToTable("DiplomaTemplates");
                });

            modelBuilder.Entity("DiplomaMakerApi.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BootcampId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<Guid>("GuidId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("LastGenerated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VerificationCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BootcampId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("DiplomaMakerApi.Models.TemplateStyle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Alignment")
                        .HasColumnType("text");

                    b.Property<string>("FontColor")
                        .HasColumnType("text");

                    b.Property<string>("FontName")
                        .HasColumnType("text");

                    b.Property<double?>("FontSize")
                        .HasColumnType("double precision");

                    b.Property<double?>("Height")
                        .HasColumnType("double precision");

                    b.Property<double?>("Width")
                        .HasColumnType("double precision");

                    b.Property<double?>("XPos")
                        .HasColumnType("double precision");

                    b.Property<double?>("YPos")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("TemplateStyles");
                });

            modelBuilder.Entity("DiplomaMakerApi.Models.Track", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("DiplomaMakerApi.Models.Bootcamp", b =>
                {
                    b.HasOne("DiplomaMakerApi.Models.DiplomaTemplate", "DiplomaTemplate")
                        .WithMany()
                        .HasForeignKey("DiplomaTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiplomaMakerApi.Models.Track", "Track")
                        .WithMany()
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiplomaTemplate");

                    b.Navigation("Track");
                });

            modelBuilder.Entity("DiplomaMakerApi.Models.DiplomaSnapshot", b =>
                {
                    b.HasOne("DiplomaMakerApi.Models.TemplateStyle", "FooterStyling")
                        .WithMany()
                        .HasForeignKey("FooterStylingId");

                    b.HasOne("DiplomaMakerApi.Models.TemplateStyle", "IntroStyling")
                        .WithMany()
                        .HasForeignKey("IntroStylingId");

                    b.HasOne("DiplomaMakerApi.Models.TemplateStyle", "LinkStyling")
                        .WithMany()
                        .HasForeignKey("LinkStylingId");

                    b.HasOne("DiplomaMakerApi.Models.TemplateStyle", "MainStyling")
                        .WithMany()
                        .HasForeignKey("MainStylingId");

                    b.Navigation("FooterStyling");

                    b.Navigation("IntroStyling");

                    b.Navigation("LinkStyling");

                    b.Navigation("MainStyling");
                });

            modelBuilder.Entity("DiplomaMakerApi.Models.DiplomaTemplate", b =>
                {
                    b.HasOne("DiplomaMakerApi.Models.TemplateStyle", "FooterStyling")
                        .WithMany()
                        .HasForeignKey("FooterStylingId");

                    b.HasOne("DiplomaMakerApi.Models.TemplateStyle", "IntroStyling")
                        .WithMany()
                        .HasForeignKey("IntroStylingId");

                    b.HasOne("DiplomaMakerApi.Models.TemplateStyle", "LinkStyling")
                        .WithMany()
                        .HasForeignKey("LinkStylingId");

                    b.HasOne("DiplomaMakerApi.Models.TemplateStyle", "MainStyling")
                        .WithMany()
                        .HasForeignKey("MainStylingId");

                    b.Navigation("FooterStyling");

                    b.Navigation("IntroStyling");

                    b.Navigation("LinkStyling");

                    b.Navigation("MainStyling");
                });

            modelBuilder.Entity("DiplomaMakerApi.Models.Student", b =>
                {
                    b.HasOne("DiplomaMakerApi.Models.Bootcamp", "Bootcamp")
                        .WithMany("Students")
                        .HasForeignKey("BootcampId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bootcamp");
                });

            modelBuilder.Entity("DiplomaMakerApi.Models.Bootcamp", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}

/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/Blob/{filename}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    filename: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Blob/DiplomaPdfs/{filename}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    filename: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Blob/download-all-templatebackgrounds": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Blob/ImagePreview/{filename}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    filename: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Blob/ImagePreviewLQIP/{filename}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    filename: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Blob/UpdateStudentsPreviewImage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "multipart/form-data": {
                        /** Format: uuid */
                        StudentGuidId?: string;
                        Image?: string;
                    };
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["StudentResponseDto"];
                        "application/json": components["schemas"]["StudentResponseDto"];
                        "text/json": components["schemas"]["StudentResponseDto"];
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Blob/UpdateBundledStudentsPreviewImages": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "multipart/form-data": {
                        PreviewImageRequests?: components["schemas"]["PreviewImageRequestDto"][];
                    };
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["StudentResponseDto"][];
                        "application/json": components["schemas"]["StudentResponseDto"][];
                        "text/json": components["schemas"]["StudentResponseDto"][];
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Blob/UserFonts/{fontName}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    fontType?: components["schemas"]["FontType"];
                };
                header?: never;
                path: {
                    fontName: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head: {
            parameters: {
                query?: {
                    fontType?: components["schemas"]["FontType"];
                };
                header?: never;
                path: {
                    fontName: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        patch?: never;
        trace?: never;
    };
    "/api/Bootcamps": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["BootcampResponseDto"][];
                        "application/json": components["schemas"]["BootcampResponseDto"][];
                        "text/json": components["schemas"]["BootcampResponseDto"][];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["BootcampRequestDto"];
                    "text/json": components["schemas"]["BootcampRequestDto"];
                    "application/*+json": components["schemas"]["BootcampRequestDto"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["BootcampResponseDto"];
                        "application/json": components["schemas"]["BootcampResponseDto"];
                        "text/json": components["schemas"]["BootcampResponseDto"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Bootcamps/{guidId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    guidId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["BootcampResponseDto"];
                        "application/json": components["schemas"]["BootcampResponseDto"];
                        "text/json": components["schemas"]["BootcampResponseDto"];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    guidId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["BootcampRequestDto"];
                    "text/json": components["schemas"]["BootcampRequestDto"];
                    "application/*+json": components["schemas"]["BootcampRequestDto"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["BootcampResponseDto"];
                        "application/json": components["schemas"]["BootcampResponseDto"];
                        "text/json": components["schemas"]["BootcampResponseDto"];
                    };
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    guidId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Bootcamps/dynamicfields/{guidId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    guidId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["BootcampRequestUpdateDto"];
                    "text/json": components["schemas"]["BootcampRequestUpdateDto"];
                    "application/*+json": components["schemas"]["BootcampRequestUpdateDto"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["BootcampResponseDto"];
                        "application/json": components["schemas"]["BootcampResponseDto"];
                        "text/json": components["schemas"]["BootcampResponseDto"];
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Email/email-student/{guidID}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: {
                    Title?: string;
                    Description?: string;
                    googleToken?: string;
                };
                header?: never;
                path: {
                    guidID: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "multipart/form-data": {
                        /** Format: binary */
                        File?: string;
                    };
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/HistorySnapshots": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["DiplomaSnapshotResponseDto"][];
                        "application/json": components["schemas"]["DiplomaSnapshotResponseDto"][];
                        "text/json": components["schemas"]["DiplomaSnapshotResponseDto"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/HistorySnapshots/{verificationCode}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    verificationCode: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["DiplomaSnapshotResponseDto"][];
                        "application/json": components["schemas"]["DiplomaSnapshotResponseDto"][];
                        "text/json": components["schemas"]["DiplomaSnapshotResponseDto"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/make-active-historysnapshot": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["MakeActiveSnapshotRequestDto"];
                    "text/json": components["schemas"]["MakeActiveSnapshotRequestDto"];
                    "application/*+json": components["schemas"]["MakeActiveSnapshotRequestDto"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["DiplomaSnapshotResponseDto"][];
                        "application/json": components["schemas"]["DiplomaSnapshotResponseDto"][];
                        "text/json": components["schemas"]["DiplomaSnapshotResponseDto"][];
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Students/{GuidID}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    GuidID: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["StudentUpdateRequestDto"];
                    "text/json": components["schemas"]["StudentUpdateRequestDto"];
                    "application/*+json": components["schemas"]["StudentUpdateRequestDto"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["StudentResponseDto"];
                        "application/json": components["schemas"]["StudentResponseDto"];
                        "text/json": components["schemas"]["StudentResponseDto"];
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Students": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["StudentResponseDto"][];
                        "application/json": components["schemas"]["StudentResponseDto"][];
                        "text/json": components["schemas"]["StudentResponseDto"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Students/{guidId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    guidId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["StudentResponseDto"];
                        "application/json": components["schemas"]["StudentResponseDto"];
                        "text/json": components["schemas"]["StudentResponseDto"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    guidId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Students/verificationCode/{verificationCode}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    verificationCode: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["StudentResponseDto"];
                        "application/json": components["schemas"]["StudentResponseDto"];
                        "text/json": components["schemas"]["StudentResponseDto"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Templates": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["TemplatesResponseDto"][];
                        "application/json": components["schemas"]["TemplatesResponseDto"][];
                        "text/json": components["schemas"]["TemplatesResponseDto"][];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["TemplatePostRequestDto"];
                    "text/json": components["schemas"]["TemplatePostRequestDto"];
                    "application/*+json": components["schemas"]["TemplatePostRequestDto"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["TemplateResponseDto"];
                        "application/json": components["schemas"]["TemplateResponseDto"];
                        "text/json": components["schemas"]["TemplateResponseDto"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Templates/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["TemplateResponseDto"];
                        "application/json": components["schemas"]["TemplateResponseDto"];
                        "text/json": components["schemas"]["TemplateResponseDto"];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["TemplateRequestDto"];
                    "text/json": components["schemas"]["TemplateRequestDto"];
                    "application/*+json": components["schemas"]["TemplateRequestDto"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["TemplateResponseDto"];
                        "application/json": components["schemas"]["TemplateResponseDto"];
                        "text/json": components["schemas"]["TemplateResponseDto"];
                    };
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Tracks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["TracksResponseDto"][];
                        "application/json": components["schemas"]["TracksResponseDto"][];
                        "text/json": components["schemas"]["TracksResponseDto"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/UserFonts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["UserFontResponseDto"][];
                        "application/json": components["schemas"]["UserFontResponseDto"][];
                        "text/json": components["schemas"]["UserFontResponseDto"][];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "multipart/form-data": {
                        UserFontRequests?: components["schemas"]["UserFontRequestDto"][];
                    };
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["UserFontResponseDto"][];
                        "application/json": components["schemas"]["UserFontResponseDto"][];
                        "text/json": components["schemas"]["UserFontResponseDto"][];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        BootcampRequestDto: {
            /** Format: int32 */
            trackId?: number;
            /** Format: date-time */
            graduationDate?: string;
        };
        BootcampRequestUpdateDto: {
            students: components["schemas"]["StudentRequestDto"][];
            /** Format: int32 */
            templateId?: number;
        };
        BootcampResponseDto: {
            /** Format: uuid */
            guidId?: string;
            /** Format: date-time */
            graduationDate?: string;
            name?: string | null;
            track?: components["schemas"]["TracksResponseDto"];
            /** Format: int32 */
            templateId?: number;
            students?: components["schemas"]["StudentResponseDto"][] | null;
        };
        DiplomaSnapshotResponseDto: {
            /** Format: int32 */
            id?: number;
            /** Format: date-time */
            generatedAt?: string;
            bootcampName?: string | null;
            /** Format: uuid */
            bootcampGuidId?: string | null;
            /** Format: date-time */
            bootcampGraduationDate?: string;
            /** Format: uuid */
            studentGuidId?: string | null;
            studentName?: string | null;
            verificationCode?: string | null;
            templateName?: string | null;
            footer?: string | null;
            footerStyling?: components["schemas"]["TemplateStyle"];
            intro?: string | null;
            introStyling?: components["schemas"]["TemplateStyle"];
            main?: string | null;
            mainStyling?: components["schemas"]["TemplateStyle"];
            link?: string | null;
            linkStyling?: components["schemas"]["TemplateStyle"];
            basePdf?: string | null;
            /** Format: date-time */
            templateLastUpdated?: string;
            active?: boolean;
        };
        /**
         * Format: int32
         * @enum {integer}
         */
        FontType: 0 | 1 | 2;
        MakeActiveSnapshotRequestDto: {
            ids?: number[] | null;
            studentGuidIds?: string[] | null;
        };
        PreviewImageRequestDto: {
            /** Format: uuid */
            studentGuidId?: string;
            image?: string | null;
        };
        StudentRequestDto: {
            /** Format: uuid */
            guidId?: string | null;
            verificationCode: string;
            name: string;
            email?: string | null;
        };
        StudentResponseDto: {
            /** Format: uuid */
            guidId?: string;
            verificationCode?: string | null;
            name?: string | null;
            email?: string | null;
            previewImageUrl?: string | null;
            previewImageLQIPUrl?: string | null;
            /** Format: date-time */
            lastGenerated?: string | null;
        };
        StudentUpdateRequestDto: {
            name?: string | null;
            /** Format: email */
            email?: string | null;
        };
        TemplatePostRequestDto: {
            /** Format: string */
            templateName: string;
        };
        TemplateRequestDto: {
            templateName?: string | null;
            footer?: string | null;
            footerStyling?: components["schemas"]["TemplateStyle"];
            intro?: string | null;
            introStyling?: components["schemas"]["TemplateStyle"];
            main?: string | null;
            mainStyling?: components["schemas"]["TemplateStyle"];
            link?: string | null;
            linkStyling?: components["schemas"]["TemplateStyle"];
            basePdf?: string | null;
            /** Format: date-time */
            pdfBackgroundLastUpdated?: string | null;
        };
        TemplateResponseDto: {
            /** Format: int32 */
            id?: number;
            name?: string | null;
            footer?: string | null;
            footerStyling?: components["schemas"]["TemplateStyle"];
            intro?: string | null;
            introStyling?: components["schemas"]["TemplateStyle"];
            main?: string | null;
            mainStyling?: components["schemas"]["TemplateStyle"];
            link?: string | null;
            linkStyling?: components["schemas"]["TemplateStyle"];
            basePdf?: string | null;
            /** Format: date-time */
            lastUpdated?: string;
            /** Format: date-time */
            pdfBackgroundLastUpdated?: string;
        };
        TemplateStyle: {
            /** Format: int32 */
            id?: number;
            /** Format: double */
            xPos?: number | null;
            /** Format: double */
            yPos?: number | null;
            /** Format: double */
            width?: number | null;
            /** Format: double */
            height?: number | null;
            /** Format: double */
            fontSize?: number | null;
            fontColor?: string | null;
            fontName?: string | null;
            alignment?: string | null;
        };
        TemplatesResponseDto: {
            templates?: components["schemas"]["TemplateResponseDto"][] | null;
        };
        TracksResponseDto: {
            /** Format: int32 */
            id?: number;
            name?: string | null;
            tag?: string | null;
            bootcamps?: components["schemas"]["BootcampResponseDto"][] | null;
        };
        UserFontRequestDto: {
            name: string;
            fontType: components["schemas"]["FontType"];
            readonly fileName?: string | null;
            /** Format: binary */
            file: string;
        };
        UserFontResponseDto: {
            name?: string | null;
            fontType?: components["schemas"]["FontType"];
            readonly fileName?: string | null;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;

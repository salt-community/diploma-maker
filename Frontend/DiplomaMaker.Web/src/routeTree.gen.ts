/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TemplateDesignerImport } from './routes/template-designer'
import { Route as BootcampmanagerImport } from './routes/bootcampmanager'

// Create/Update Routes

const TemplateDesignerRoute = TemplateDesignerImport.update({
  id: '/template-designer',
  path: '/template-designer',
  getParentRoute: () => rootRoute,
} as any)

const BootcampmanagerRoute = BootcampmanagerImport.update({
  id: '/bootcampmanager',
  path: '/bootcampmanager',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/bootcampmanager': {
      id: '/bootcampmanager'
      path: '/bootcampmanager'
      fullPath: '/bootcampmanager'
      preLoaderRoute: typeof BootcampmanagerImport
      parentRoute: typeof rootRoute
    }
    '/template-designer': {
      id: '/template-designer'
      path: '/template-designer'
      fullPath: '/template-designer'
      preLoaderRoute: typeof TemplateDesignerImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/bootcampmanager': typeof BootcampmanagerRoute
  '/template-designer': typeof TemplateDesignerRoute
}

export interface FileRoutesByTo {
  '/bootcampmanager': typeof BootcampmanagerRoute
  '/template-designer': typeof TemplateDesignerRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/bootcampmanager': typeof BootcampmanagerRoute
  '/template-designer': typeof TemplateDesignerRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/bootcampmanager' | '/template-designer'
  fileRoutesByTo: FileRoutesByTo
  to: '/bootcampmanager' | '/template-designer'
  id: '__root__' | '/bootcampmanager' | '/template-designer'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  BootcampmanagerRoute: typeof BootcampmanagerRoute
  TemplateDesignerRoute: typeof TemplateDesignerRoute
}

const rootRouteChildren: RootRouteChildren = {
  BootcampmanagerRoute: BootcampmanagerRoute,
  TemplateDesignerRoute: TemplateDesignerRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/bootcampmanager",
        "/template-designer"
      ]
    },
    "/bootcampmanager": {
      "filePath": "bootcampmanager.tsx"
    },
    "/template-designer": {
      "filePath": "template-designer.tsx"
    }
  }
}
ROUTE_MANIFEST_END */

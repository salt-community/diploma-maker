/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ValidateDiplomaImport } from './routes/validate-diploma'
import { Route as TemplateDesignerImport } from './routes/template-designer'
import { Route as EmailImport } from './routes/email'
import { Route as BootcampmanagerImport } from './routes/bootcampmanager'

// Create/Update Routes

const ValidateDiplomaRoute = ValidateDiplomaImport.update({
  id: '/validate-diploma',
  path: '/validate-diploma',
  getParentRoute: () => rootRoute,
} as any)

const TemplateDesignerRoute = TemplateDesignerImport.update({
  id: '/template-designer',
  path: '/template-designer',
  getParentRoute: () => rootRoute,
} as any)

const EmailRoute = EmailImport.update({
  id: '/email',
  path: '/email',
  getParentRoute: () => rootRoute,
} as any)

const BootcampmanagerRoute = BootcampmanagerImport.update({
  id: '/bootcampmanager',
  path: '/bootcampmanager',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/bootcampmanager': {
      id: '/bootcampmanager'
      path: '/bootcampmanager'
      fullPath: '/bootcampmanager'
      preLoaderRoute: typeof BootcampmanagerImport
      parentRoute: typeof rootRoute
    }
    '/email': {
      id: '/email'
      path: '/email'
      fullPath: '/email'
      preLoaderRoute: typeof EmailImport
      parentRoute: typeof rootRoute
    }
    '/template-designer': {
      id: '/template-designer'
      path: '/template-designer'
      fullPath: '/template-designer'
      preLoaderRoute: typeof TemplateDesignerImport
      parentRoute: typeof rootRoute
    }
    '/validate-diploma': {
      id: '/validate-diploma'
      path: '/validate-diploma'
      fullPath: '/validate-diploma'
      preLoaderRoute: typeof ValidateDiplomaImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/bootcampmanager': typeof BootcampmanagerRoute
  '/email': typeof EmailRoute
  '/template-designer': typeof TemplateDesignerRoute
  '/validate-diploma': typeof ValidateDiplomaRoute
}

export interface FileRoutesByTo {
  '/bootcampmanager': typeof BootcampmanagerRoute
  '/email': typeof EmailRoute
  '/template-designer': typeof TemplateDesignerRoute
  '/validate-diploma': typeof ValidateDiplomaRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/bootcampmanager': typeof BootcampmanagerRoute
  '/email': typeof EmailRoute
  '/template-designer': typeof TemplateDesignerRoute
  '/validate-diploma': typeof ValidateDiplomaRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/bootcampmanager'
    | '/email'
    | '/template-designer'
    | '/validate-diploma'
  fileRoutesByTo: FileRoutesByTo
  to: '/bootcampmanager' | '/email' | '/template-designer' | '/validate-diploma'
  id:
    | '__root__'
    | '/bootcampmanager'
    | '/email'
    | '/template-designer'
    | '/validate-diploma'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  BootcampmanagerRoute: typeof BootcampmanagerRoute
  EmailRoute: typeof EmailRoute
  TemplateDesignerRoute: typeof TemplateDesignerRoute
  ValidateDiplomaRoute: typeof ValidateDiplomaRoute
}

const rootRouteChildren: RootRouteChildren = {
  BootcampmanagerRoute: BootcampmanagerRoute,
  EmailRoute: EmailRoute,
  TemplateDesignerRoute: TemplateDesignerRoute,
  ValidateDiplomaRoute: ValidateDiplomaRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/bootcampmanager",
        "/email",
        "/template-designer",
        "/validate-diploma"
      ]
    },
    "/bootcampmanager": {
      "filePath": "bootcampmanager.tsx"
    },
    "/email": {
      "filePath": "email.tsx"
    },
    "/template-designer": {
      "filePath": "template-designer.tsx"
    },
    "/validate-diploma": {
      "filePath": "validate-diploma.tsx"
    }
  }
}
ROUTE_MANIFEST_END */

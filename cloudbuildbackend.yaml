steps:
  # Back up the Blob folder from the current container
  - name: 'Backup Blob folder'
    run: |
      gcloud auth activate-service-account --key-file=${{ secrets.GCP_SA_KEY }}
      gcloud config set project ${{ secrets.GCP_PROJECT }}
      gcloud run services describe backend-diploma --platform managed --region us-central1 --format "value(status.url)" > service_url.txt
      SERVICE_URL=$(cat service_url.txt)
      curl -o blob_backup.tar.gz $SERVICE_URL/Blob/backup

  # Build containers
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/pgp-sandbox/diplomamakers-backend:latest', '-f', 'Dockerfile', '.']
    dir: Backend/DiplomaMakerApi/

  # Push the Containers to the Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/pgp-sandbox/diplomamakers-backend:latest']

  # Deploy Containers to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['run', 'deploy', 'backend-diploma', '--image', 'gcr.io/pgp-sandbox/diplomamakers-backend:latest', '--platform', 'managed', '--region', 'us-central1', '--allow-unauthenticated']

  # Restore the Blob folder to the new container
  - name: 'Restore Blob folder'
    run: |
      gcloud auth activate-service-account --key-file=${{ secrets.GCP_SA_KEY }}
      gcloud config set project ${{ secrets.GCP_PROJECT }}
      gcloud run services describe backend-diploma --platform managed --region us-central1 --format "value(status.url)" > service_url.txt
      SERVICE_URL=$(cat service_url.txt)
      curl -X POST -F "blob_backup=@blob_backup.tar.gz" $SERVICE_URL/Blob/restore

images:
  - 'gcr.io/pgp-sandbox/diplomamakers-backend:latest'

options:
  default_logs_bucket_behavior: REGIONAL_USER_OWNED_BUCKET
